{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fusio\\\\Desktop\\\\assessment\\\\frontend\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [editMode, setEditMode] = useState(false);\n  const [editTodoId, setEditTodoId] = useState(null);\n\n  // Fetch the todos from the backend\n  useEffect(() => {\n    fetch(\"http://localhost:5000/todos\").then(response => response.json()).then(data => setTodos(data));\n  }, []);\n\n  // Handle adding or updating a todo\n  const handleSubmit = () => {\n    if (!title) {\n      alert(\"Please enter a title for the todo!\");\n      return;\n    }\n    const todoData = {\n      title,\n      description\n    };\n    const method = editMode ? \"PUT\" : \"POST\";\n    const url = editMode ? `http://localhost:5000/todos/${editTodoId}` : \"http://localhost:5000/todos\";\n    fetch(url, {\n      method,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(todoData)\n    }).then(response => response.json()).then(newTodo => {\n      if (editMode) {\n        setTodos(todos.map(todo => todo.id === newTodo.id ? newTodo : todo));\n      } else {\n        setTodos([...todos, newTodo]);\n      }\n      resetForm();\n    });\n  };\n\n  // Handle deleting a todo\n  const deleteTodo = id => {\n    fetch(`http://localhost:5000/todos/${id}`, {\n      method: \"DELETE\"\n    }).then(() => {\n      setTodos(todos.filter(todo => todo.id !== id));\n    });\n  };\n\n  // Handle completing a todo\n  const toggleCompletion = id => {\n    const todo = todos.find(todo => todo.id === id);\n    fetch(`http://localhost:5000/todos/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        ...todo,\n        done: !todo.done\n      })\n    }).then(response => response.json()).then(updatedTodo => {\n      setTodos(todos.map(todo => todo.id === updatedTodo.id ? updatedTodo : todo));\n    });\n  };\n\n  // Handle editing a todo\n  const startEdit = id => {\n    const todo = todos.find(todo => todo.id === id);\n    setTitle(todo.title);\n    setDescription(todo.description);\n    setEditMode(true);\n    setEditTodoId(id);\n  };\n\n  // Reset form fields\n  const resetForm = () => {\n    setTitle(\"\");\n    setDescription(\"\");\n    setEditMode(false);\n    setEditTodoId(null);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, \"Todo List\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter Todo Title\",\n    value: title,\n    onChange: e => setTitle(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    placeholder: \"Enter Todo Description\",\n    value: description,\n    onChange: e => setDescription(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, editMode ? \"Update Todo\" : \"Add Todo\"), editMode && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: resetForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 22\n    }\n  }, \"Cancel Edit\")), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"todo-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, todos.map(todo => /*#__PURE__*/React.createElement(\"li\", {\n    key: todo.id,\n    className: `todo-item ${todo.done ? \"done\" : \"\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: todo.done,\n    onChange: () => toggleCompletion(todo.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"todo-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, todo.title), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"todo-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, todo.description), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"edit-btn\",\n    onClick: () => startEdit(todo.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, \"Edit\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"delete-btn\",\n    onClick: () => deleteTodo(todo.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, \"Delete\")))));\n}\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","App","todos","setTodos","title","setTitle","description","setDescription","editMode","setEditMode","editTodoId","setEditTodoId","fetch","then","response","json","data","handleSubmit","alert","todoData","method","url","headers","body","JSON","stringify","newTodo","map","todo","id","resetForm","deleteTodo","filter","toggleCompletion","find","done","updatedTodo","startEdit","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","key","checked"],"sources":["C:/Users/fusio/Desktop/assessment/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const [todos, setTodos] = useState([]);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [editTodoId, setEditTodoId] = useState(null);\r\n\r\n  // Fetch the todos from the backend\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:5000/todos\")\r\n      .then((response) => response.json())\r\n      .then((data) => setTodos(data));\r\n  }, []);\r\n\r\n  // Handle adding or updating a todo\r\n  const handleSubmit = () => {\r\n    if (!title) {\r\n      alert(\"Please enter a title for the todo!\");\r\n      return;\r\n    }\r\n\r\n    const todoData = { title, description };\r\n    \r\n    const method = editMode ? \"PUT\" : \"POST\";\r\n    const url = editMode\r\n      ? `http://localhost:5000/todos/${editTodoId}`\r\n      : \"http://localhost:5000/todos\";\r\n\r\n    fetch(url, {\r\n      method,\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(todoData),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((newTodo) => {\r\n        if (editMode) {\r\n          setTodos(\r\n            todos.map((todo) =>\r\n              todo.id === newTodo.id ? newTodo : todo\r\n            )\r\n          );\r\n        } else {\r\n          setTodos([...todos, newTodo]);\r\n        }\r\n        resetForm();\r\n      });\r\n  };\r\n\r\n  // Handle deleting a todo\r\n  const deleteTodo = (id) => {\r\n    fetch(`http://localhost:5000/todos/${id}`, {\r\n      method: \"DELETE\",\r\n    }).then(() => {\r\n      setTodos(todos.filter((todo) => todo.id !== id));\r\n    });\r\n  };\r\n\r\n  // Handle completing a todo\r\n  const toggleCompletion = (id) => {\r\n    const todo = todos.find((todo) => todo.id === id);\r\n    fetch(`http://localhost:5000/todos/${id}`, {\r\n      method: \"PUT\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ ...todo, done: !todo.done }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((updatedTodo) => {\r\n        setTodos(\r\n          todos.map((todo) =>\r\n            todo.id === updatedTodo.id ? updatedTodo : todo\r\n          )\r\n        );\r\n      });\r\n  };\r\n\r\n  // Handle editing a todo\r\n  const startEdit = (id) => {\r\n    const todo = todos.find((todo) => todo.id === id);\r\n    setTitle(todo.title);\r\n    setDescription(todo.description);\r\n    setEditMode(true);\r\n    setEditTodoId(id);\r\n  };\r\n\r\n  // Reset form fields\r\n  const resetForm = () => {\r\n    setTitle(\"\");\r\n    setDescription(\"\");\r\n    setEditMode(false);\r\n    setEditTodoId(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Todo List</h1>\r\n\r\n      <div className=\"form\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter Todo Title\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n        />\r\n        <textarea\r\n          placeholder=\"Enter Todo Description\"\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n        ></textarea>\r\n        <button onClick={handleSubmit}>\r\n          {editMode ? \"Update Todo\" : \"Add Todo\"}\r\n        </button>\r\n        {editMode && <button onClick={resetForm}>Cancel Edit</button>}\r\n      </div>\r\n\r\n      <ul className=\"todo-list\">\r\n        {todos.map((todo) => (\r\n          <li key={todo.id} className={`todo-item ${todo.done ? \"done\" : \"\"}`}>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={todo.done}\r\n              onChange={() => toggleCompletion(todo.id)}\r\n            />\r\n            <span className=\"todo-title\">{todo.title}</span>\r\n            <p className=\"todo-description\">{todo.description}</p>\r\n            <button className=\"edit-btn\" onClick={() => startEdit(todo.id)}>\r\n              Edit\r\n            </button>\r\n            <button\r\n              className=\"delete-btn\"\r\n              onClick={() => deleteTodo(todo.id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAElB,SAASC,GAAGA,CAAA,EAAG;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;;EAElD;EACAC,SAAS,CAAC,MAAM;IACdY,KAAK,CAAC,6BAA6B,CAAC,CACjCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKb,QAAQ,CAACa,IAAI,CAAC,CAAC;EACnC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAI,CAACb,KAAK,EAAE;MACVc,KAAK,CAAC,oCAAoC,CAAC;MAC3C;IACF;IAEA,MAAMC,QAAQ,GAAG;MAAEf,KAAK;MAAEE;IAAY,CAAC;IAEvC,MAAMc,MAAM,GAAGZ,QAAQ,GAAG,KAAK,GAAG,MAAM;IACxC,MAAMa,GAAG,GAAGb,QAAQ,GAChB,+BAA+BE,UAAU,EAAE,GAC3C,6BAA6B;IAEjCE,KAAK,CAACS,GAAG,EAAE;MACTD,MAAM;MACNE,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,QAAQ;IAC/B,CAAC,CAAC,CACCN,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEa,OAAO,IAAK;MACjB,IAAIlB,QAAQ,EAAE;QACZL,QAAQ,CACND,KAAK,CAACyB,GAAG,CAAEC,IAAI,IACbA,IAAI,CAACC,EAAE,KAAKH,OAAO,CAACG,EAAE,GAAGH,OAAO,GAAGE,IACrC,CACF,CAAC;MACH,CAAC,MAAM;QACLzB,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEwB,OAAO,CAAC,CAAC;MAC/B;MACAI,SAAS,CAAC,CAAC;IACb,CAAC,CAAC;EACN,CAAC;;EAED;EACA,MAAMC,UAAU,GAAIF,EAAE,IAAK;IACzBjB,KAAK,CAAC,+BAA+BiB,EAAE,EAAE,EAAE;MACzCT,MAAM,EAAE;IACV,CAAC,CAAC,CAACP,IAAI,CAAC,MAAM;MACZV,QAAQ,CAACD,KAAK,CAAC8B,MAAM,CAAEJ,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC,CAAC;IAClD,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMI,gBAAgB,GAAIJ,EAAE,IAAK;IAC/B,MAAMD,IAAI,GAAG1B,KAAK,CAACgC,IAAI,CAAEN,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;IACjDjB,KAAK,CAAC,+BAA+BiB,EAAE,EAAE,EAAE;MACzCT,MAAM,EAAE,KAAK;MACbE,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAE,GAAGG,IAAI;QAAEO,IAAI,EAAE,CAACP,IAAI,CAACO;MAAK,CAAC;IACpD,CAAC,CAAC,CACCtB,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEuB,WAAW,IAAK;MACrBjC,QAAQ,CACND,KAAK,CAACyB,GAAG,CAAEC,IAAI,IACbA,IAAI,CAACC,EAAE,KAAKO,WAAW,CAACP,EAAE,GAAGO,WAAW,GAAGR,IAC7C,CACF,CAAC;IACH,CAAC,CAAC;EACN,CAAC;;EAED;EACA,MAAMS,SAAS,GAAIR,EAAE,IAAK;IACxB,MAAMD,IAAI,GAAG1B,KAAK,CAACgC,IAAI,CAAEN,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;IACjDxB,QAAQ,CAACuB,IAAI,CAACxB,KAAK,CAAC;IACpBG,cAAc,CAACqB,IAAI,CAACtB,WAAW,CAAC;IAChCG,WAAW,CAAC,IAAI,CAAC;IACjBE,aAAa,CAACkB,EAAE,CAAC;EACnB,CAAC;;EAED;EACA,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACtBzB,QAAQ,CAAC,EAAE,CAAC;IACZE,cAAc,CAAC,EAAE,CAAC;IAClBE,WAAW,CAAC,KAAK,CAAC;IAClBE,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,oBACEb,KAAA,CAAAwC,aAAA;IAAKC,SAAS,EAAC,KAAK;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAClB/C,KAAA,CAAAwC,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,WAAa,CAAC,eAElB/C,KAAA,CAAAwC,aAAA;IAAKC,SAAS,EAAC,MAAM;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACnB/C,KAAA,CAAAwC,aAAA;IACEQ,IAAI,EAAC,MAAM;IACXC,WAAW,EAAC,kBAAkB;IAC9BC,KAAK,EAAE5C,KAAM;IACb6C,QAAQ,EAAGC,CAAC,IAAK7C,QAAQ,CAAC6C,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC3C,CAAC,eACF/C,KAAA,CAAAwC,aAAA;IACES,WAAW,EAAC,wBAAwB;IACpCC,KAAK,EAAE1C,WAAY;IACnB2C,QAAQ,EAAGC,CAAC,IAAK3C,cAAc,CAAC2C,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACvC,CAAC,eACZ/C,KAAA,CAAAwC,aAAA;IAAQc,OAAO,EAAEnC,YAAa;IAAAuB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC3BrC,QAAQ,GAAG,aAAa,GAAG,UACtB,CAAC,EACRA,QAAQ,iBAAIV,KAAA,CAAAwC,aAAA;IAAQc,OAAO,EAAEtB,SAAU;IAAAU,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,aAAmB,CACzD,CAAC,eAEN/C,KAAA,CAAAwC,aAAA;IAAIC,SAAS,EAAC,WAAW;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACtB3C,KAAK,CAACyB,GAAG,CAAEC,IAAI,iBACd9B,KAAA,CAAAwC,aAAA;IAAIe,GAAG,EAAEzB,IAAI,CAACC,EAAG;IAACU,SAAS,EAAE,aAAaX,IAAI,CAACO,IAAI,GAAG,MAAM,GAAG,EAAE,EAAG;IAAAK,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAClE/C,KAAA,CAAAwC,aAAA;IACEQ,IAAI,EAAC,UAAU;IACfQ,OAAO,EAAE1B,IAAI,CAACO,IAAK;IACnBc,QAAQ,EAAEA,CAAA,KAAMhB,gBAAgB,CAACL,IAAI,CAACC,EAAE,CAAE;IAAAW,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC3C,CAAC,eACF/C,KAAA,CAAAwC,aAAA;IAAMC,SAAS,EAAC,YAAY;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEjB,IAAI,CAACxB,KAAY,CAAC,eAChDN,KAAA,CAAAwC,aAAA;IAAGC,SAAS,EAAC,kBAAkB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEjB,IAAI,CAACtB,WAAe,CAAC,eACtDR,KAAA,CAAAwC,aAAA;IAAQC,SAAS,EAAC,UAAU;IAACa,OAAO,EAAEA,CAAA,KAAMf,SAAS,CAACT,IAAI,CAACC,EAAE,CAAE;IAAAW,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,MAExD,CAAC,eACT/C,KAAA,CAAAwC,aAAA;IACEC,SAAS,EAAC,YAAY;IACtBa,OAAO,EAAEA,CAAA,KAAMrB,UAAU,CAACH,IAAI,CAACC,EAAE,CAAE;IAAAW,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACpC,QAEO,CACN,CACL,CACC,CACD,CAAC;AAEV;AAEA,eAAe5C,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module"}