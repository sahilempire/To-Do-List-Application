{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fusio\\\\Desktop\\\\assessment\\\\frontend\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nconst [todos, setTodos] = useState([]);\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const [newTodo, setNewTodo] = useState('');\n  useEffect(() => {\n    fetch('/todos').then(response => response.json()).then(data => setTodos(data));\n  }, []);\n  const addTodo = () => {\n    fetch('/todos', {\n      method: 'POST',\n      body: JSON.stringify({\n        title: newTodo\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(todo => {\n      setTodos([...todos, todo]);\n      setNewTodo('');\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, \"To-Do List\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: newTodo,\n    onChange: e => setNewTodo(e.target.value),\n    placeholder: \"Enter a new task\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, \"Add\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, todos.map(todo => /*#__PURE__*/React.createElement(\"li\", {\n    key: todo.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, todo.title, \" - \", todo.done ? 'Done' : 'Not done'))));\n}\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","todos","setTodos","App","newTodo","setNewTodo","fetch","then","response","json","data","addTodo","method","body","JSON","stringify","title","headers","todo","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","map","key","id","done"],"sources":["C:/Users/fusio/Desktop/assessment/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst [todos, setTodos] = useState([]);\r\n\r\nfunction App() {\r\n  const [todos, setTodos] = useState([]);\r\n  const [newTodo, setNewTodo] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetch('/todos')\r\n      .then(response => response.json())\r\n      .then(data => setTodos(data));\r\n  }, []);\r\n\r\n  const addTodo = () => {\r\n    fetch('/todos', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ title: newTodo }),\r\n      headers: { 'Content-Type': 'application/json' }\r\n    })\r\n      .then(response => response.json())\r\n      .then(todo => {\r\n        setTodos([...todos, todo]);\r\n        setNewTodo('');\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>To-Do List</h1>\r\n      <input\r\n        type=\"text\"\r\n        value={newTodo}\r\n        onChange={e => setNewTodo(e.target.value)}\r\n        placeholder=\"Enter a new task\"\r\n      />\r\n      <button onClick={addTodo}>Add</button>\r\n      <ul>\r\n        {todos.map(todo => (\r\n          <li key={todo.id}>\r\n            {todo.title} - {todo.done ? 'Done' : 'Not done'}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;AAEtC,SAASI,GAAGA,CAAA,EAAG;EACb,MAAM,CAACF,KAAK,EAAEC,QAAQ,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACK,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACdM,KAAK,CAAC,QAAQ,CAAC,CACZC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIR,QAAQ,CAACQ,IAAI,CAAC,CAAC;EACjC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,OAAO,GAAGA,CAAA,KAAM;IACpBL,KAAK,CAAC,QAAQ,EAAE;MACdM,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,KAAK,EAAEZ;MAAQ,CAAC,CAAC;MACxCa,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB;IAChD,CAAC,CAAC,CACCV,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACW,IAAI,IAAI;MACZhB,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEiB,IAAI,CAAC,CAAC;MAC1Bb,UAAU,CAAC,EAAE,CAAC;IAChB,CAAC,CAAC;EACN,CAAC;EAED,oBACEP,KAAA,CAAAqB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACE3B,KAAA,CAAAqB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,YAAc,CAAC,eACnB3B,KAAA,CAAAqB,aAAA;IACEO,IAAI,EAAC,MAAM;IACXC,KAAK,EAAEvB,OAAQ;IACfwB,QAAQ,EAAEC,CAAC,IAAIxB,UAAU,CAACwB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;IAC1CI,WAAW,EAAC,kBAAkB;IAAAX,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC/B,CAAC,eACF3B,KAAA,CAAAqB,aAAA;IAAQa,OAAO,EAAErB,OAAQ;IAAAS,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,KAAW,CAAC,eACtC3B,KAAA,CAAAqB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACGxB,KAAK,CAACgC,GAAG,CAACf,IAAI,iBACbpB,KAAA,CAAAqB,aAAA;IAAIe,GAAG,EAAEhB,IAAI,CAACiB,EAAG;IAAAf,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACdP,IAAI,CAACF,KAAK,EAAC,KAAG,EAACE,IAAI,CAACkB,IAAI,GAAG,MAAM,GAAG,UACnC,CACL,CACC,CACD,CAAC;AAEV;AAEA,eAAejC,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module"}